[
    {
        "id": "fe3e3620c4c4f2b6",
        "type": "tab",
        "label": "Fluxo 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2a70e7e5ca3288d7",
        "type": "mqtt in",
        "z": "fe3e3620c4c4f2b6",
        "name": "MQTT Heart Rate",
        "topic": "iot/esp32/heart",
        "qos": "0",
        "datatype": "auto",
        "broker": "0c55c2f8b6d963c7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 740,
        "wires": [
            [
                "5bca2cdc8991cad3"
            ]
        ]
    },
    {
        "id": "5bca2cdc8991cad3",
        "type": "json",
        "z": "fe3e3620c4c4f2b6",
        "name": "Parse JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 740,
        "wires": [
            [
                "3f4ba5ff38f101aa"
            ]
        ]
    },
    {
        "id": "3f4ba5ff38f101aa",
        "type": "function",
        "z": "fe3e3620c4c4f2b6",
        "name": "Formatar HeartRate",
        "func": "// Se o payload já for um número direto\nif (typeof msg.payload === 'number') {\n    msg.payload = { heartRate: msg.payload };\n}\n\n// Se o payload for um objeto mas com chave diferente\nelse if (msg.payload.bpm !== undefined) {\n    msg.payload.heartRate = msg.payload.bpm;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 740,
        "wires": [
            [
                "b4f1fd08fddcb9db",
                "46967727c1e853b8"
            ]
        ]
    },
    {
        "id": "b4f1fd08fddcb9db",
        "type": "ui_gauge",
        "z": "fe3e3620c4c4f2b6",
        "name": "Heart Rate",
        "group": "70a0d7f8.fce4f8",
        "order": 0,
        "width": 6,
        "height": 4,
        "gtype": "donut",
        "title": "Heart Rate",
        "label": "",
        "format": "{{payload.heartRate}}",
        "min": 0,
        "max": 200,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": 90,
        "seg2": 120,
        "className": "",
        "x": 790,
        "y": 720,
        "wires": []
    },
    {
        "id": "46967727c1e853b8",
        "type": "switch",
        "z": "fe3e3620c4c4f2b6",
        "name": "Check Heart Range",
        "property": "payload.heartRate",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "50",
                "vt": "num"
            },
            {
                "t": "btwn",
                "v": "50",
                "vt": "num",
                "v2": "120",
                "v2t": "num"
            },
            {
                "t": "gt",
                "v": "120",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 790,
        "y": 780,
        "wires": [
            [
                "88b6f660130365a0"
            ],
            [
                "ce0f6fdba2fb52d9"
            ],
            [
                "62b758be1fc9ac29"
            ]
        ]
    },
    {
        "id": "88b6f660130365a0",
        "type": "ui_text",
        "z": "fe3e3620c4c4f2b6",
        "group": "70a0d7f8.fce4f8",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "LOW ALERT",
        "label": "Status",
        "format": "LOW BPM ({{payload.heartRate}} bpm)",
        "layout": "row-spread",
        "className": "blue",
        "x": 990,
        "y": 720,
        "wires": []
    },
    {
        "id": "ce0f6fdba2fb52d9",
        "type": "ui_text",
        "z": "fe3e3620c4c4f2b6",
        "group": "70a0d7f8.fce4f8",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "NORMAL",
        "label": "Status",
        "format": "Normal ({{payload.heartRate}} bpm)",
        "layout": "row-spread",
        "className": "green",
        "x": 990,
        "y": 760,
        "wires": []
    },
    {
        "id": "62b758be1fc9ac29",
        "type": "ui_text",
        "z": "fe3e3620c4c4f2b6",
        "group": "70a0d7f8.fce4f8",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "HIGH ALERT",
        "label": "Status",
        "format": "HIGH BPM ({{payload.heartRate}} bpm)",
        "layout": "row-spread",
        "className": "red",
        "x": 990,
        "y": 800,
        "wires": []
    },
    {
        "id": "0c55c2f8b6d963c7",
        "type": "mqtt-broker",
        "name": "HiveMQ Broker",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "70a0d7f8.fce4f8",
        "type": "ui_group",
        "name": "Heart Monitor",
        "tab": "f5d3458c9aeb6b11",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f5d3458c9aeb6b11",
        "type": "ui_tab",
        "name": "Health Dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]